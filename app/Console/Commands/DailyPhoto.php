<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Storage;
use Telegram\Bot\Api;

class DailyPhoto extends Command
{
    protected $signature = 'telegram:daily-photo';
    protected $description = '–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–æ—Ç–æ –≤ —á–∞—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å';
    protected Api $telegram;

    public function __construct(Api $telegram)
    {
        parent::__construct();
        $this->telegram = $telegram;
    }

    public function handle(): void
    {
        $chatIds = [
            config('services.telegram.chat_id_friend'), 
            // config('services.telegram.chat_id_parents'), 
            // config('services.telegram.chat_id_cousins'),
        ];

        $data = json_decode(Storage::get('photos.json'), true);
        $index = $data['index'];
        $photos = $data['photos'];

        if (empty($photos)) {
            $this->error('–ù–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.');
            return;
        }

        $photo = $photos[$index];

        foreach ($chatIds as $chatId) {
            try {
                $this->telegram->sendPhoto([
                    'chat_id' => $chatId,
                    'photo' => $photo,
                    'caption' => '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ñ–æ—Ç–∫–∞ üòä',
                ]);
                $this->info("–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç: $chatId");
            } catch (\Exception $e) {
                $this->error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ $chatId: " . $e->getMessage());
            }
        }

        // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å –∏–ª–∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º
        $data['index'] = ($index + 1) % count($photos);
        Storage::put('photos.json', json_encode($data, JSON_PRETTY_PRINT));

        $this->info("–§–æ—Ç–æ #$index —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.");
    }
}
